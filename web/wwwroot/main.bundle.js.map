{"version":3,"sources":["webpack:///./angular async","webpack:///./angular/app/services/gdax.service.ts","webpack:///./angular/main.ts","webpack:///./angular/app/app.component.ts","webpack:///./angular/app/app.module.ts","webpack:///./angular/environments/environment.ts","webpack:///./angular/app/app.component.css","webpack:///./angular/app/app.component.html"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACN0C;AACG;AAG7C;IAEE,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,kCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;aAC7B,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ,IAAI,cAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAArB,CAAqB,CAAC;aACvC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAE7B,CAAC;IAED,iCAAW,GAAX,UAAY,KAAU;QACpB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAfH;QAAC,wFAAU,EAAE;;mBAAA;IAiBb,kBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;ACpB6C;AAC4B;AAE9B;AACY;AAEpB;AAEpC,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACZH;AAEI;AAOrD;IAGE,sBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAFrC,UAAK,GAAG,YAAY,CAAC;IAEoB,CAAC;IAE1C,+BAAQ,GAAR;QACE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,kBAAQ;YACpC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC;IAdH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;YACnC,kCAAkC;SACnC,CAAC;;oBAAA;IAYF,mBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACpBwD;AACjB;AACI;AACF;AAEI;AACO;AAcrD;IAAA;IAAyB,CAAC;IAZ1B;QAAC,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;aACX;YACD,SAAS,EAAE,CAAC,2EAAW,CAAC;YACxB,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC;;;;;;;;;ACpB1B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,4BAA4B,OAAO,U","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 192;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./angular async\n// module id = 192\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\n@Injectable()\nexport class GdaxService {\n\n  constructor(private http: Http) { }\n\n  listAccounts(): Promise<any> {\n    return this.http.get('api/gdax')\n      .toPromise()\n      .then(response => console.log(response))\n      .catch(this.handleError);\n\n  }\n\n  handleError(error: any) {\n    console.log('error');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./angular/app/services/gdax.service.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'rxjs/add/operator/toPromise';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./angular/main.ts","import { Component, OnInit } from '@angular/core';\n\nimport { GdaxService } from './services/gdax.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app works!';\n\n  constructor(private gdax: GdaxService) { }\n\n  ngOnInit(): void {\n    this.gdax.listAccounts().then(response => {\n      console.log(response);\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./angular/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { GdaxService } from './services/gdax.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [GdaxService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./angular/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./angular/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./angular/app/app.component.css\n// module id = 456\n// module chunks = 1","module.exports = \"<h1>\\n  {{title}}\\n</h1>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./angular/app/app.component.html\n// module id = 458\n// module chunks = 1"],"sourceRoot":""}